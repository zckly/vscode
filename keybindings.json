// Place your key bindings in this file to override the defaults
[
  // Move to the previous/next editor.
  {
    "key": "cmd+k",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.previousEditor"
  },
  // Move active editor left or right (useful for full-stack web dev).
  {
    "key": "cmd+ctrl+j",
    "command": "moveActiveEditor",
    "args": {
      "to": "left"
    }
  },
  {
    "key": "cmd+ctrl+k",
    "command": "moveActiveEditor",
    "args": {
      "to": "right"
    }
  },
  // Quickly debug with console log.
  {
    "key": "ctrl+l",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.log('${TM_SELECTED_TEXT}$1')$2;"
    }
  },
  // Traverse VSCode IntelliSense suggestions with vim keybindings.
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  // Traverse VSCode quick open options with vim keybindings.
  {
    "key": "cmd+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },

  // VSCode terminal commands.
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "cmd+ctrl+enter",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },

  // Ensure that tab button works in vim.
  {
    "key": "shift+tab",
    "command": "tab",
    "when": "editorTextFocus && !editorTabMovesFocus"
  },
  {
    "key": "cmd+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "r",
    "command": "renamefile",
    "when": "explorerviewletvisible && filesexplorerfocus && !explorerresourceisroot && !explorerresourcereadonly && !inputfocus"
  },
  {
    "key": "enter",
    "command": "-renamefile",
    "when": "explorerviewletvisible && filesexplorerfocus && !explorerresourceisroot && !explorerresourcereadonly && !inputfocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  }

  // OLD
  // {
  //   "key": "shift+ctrl+e",
  //   "command": "actions.findWithSelection"
  // },
  // {
  //   "key": "ctrl+e",
  //   "command": "-actions.findWithSelection"
  // },
  // {
  //   "key": "shift+ctrl+e",
  //   "command": "-workbench.view.explorer"
  // },

  // {
  //   "key": "j",
  //   "command": "list.focusDown",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  // {
  //   "key": "k",
  //   "command": "list.focusUp",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "selectNextSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+k",
  //   "command": "selectPrevSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "workbench.action.quickOpenNavigateNext",
  //   "when": "inQuickOpen"
  // },
  // {
  //   "key": "tab",
  //   "command": "workbench.action.quickOpenNavigateNext",
  //   "when": "inQuickOpen"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "selectPrevSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "workbench.action.quickOpenNavigatePrevious",
  //   "when": "inQuickOpen"
  // },
  // {
  //   "key": "ctrl+k",
  //   "command": "workbench.action.quickOpenNavigatePrevious",
  //   "when": "inQuickOpen"
  // },
  // {
  //   "key": "ctrl+h",
  //   "command": "workbench.explorer.fileView.focus",
  //   "when": "explorerViewletVisible && editorTextFocus"
  // },
  // {
  //   "key": "ctrl+h",
  //   "command": "workbench.action.focusActiveEditorGroup",
  //   "when": "explorerViewletVisible && filesExplorerFocus"
  // },
  // {
  //   "key": "shift+;",
  //   "command": "insertPrevSuggestion",
  //   "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  // },
  // {
  //   "key": "ctrl+shift+t",
  //   "command": "workbench.action.terminal.focus",
  //   "when": "!terminalFocus"
  // },
  // {
  //   "key": "alt+j",
  //   "command": "workbench.action.terminal.focus",
  //   "when": "!terminalFocus"
  // },
  // {
  //   "key": "ctrl+shift+t",
  //   "command": "workbench.action.togglePanel"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "-workbench.action.togglePanel"
  // },
  // {
  //   "key": "ctrl+k ctrl+i",
  //   "command": "-editor.action.showHover",
  //   "when": "editorTextFocus"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "-acceptAlternativeSelectedSuggestion",
  //   "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  // }
]
